const myImg1 = '<img src="https://i.postimg.cc/pV7Hxggp/Screenshot-2025-08-25-201537.png" width="300px" height="200px"></img><p>Resistance equivalance of the circuit?</p>';
const myImg = '<img src="https://i.postimg.cc/d3n67j6M/Screenshot-2025-08-23-200845.png width="300px" height="200px"></img><p>Resistance equivalance of the circuit?</p>';
const questions = [

// Q1
{
Â  Â  q: " What is the capital of France?",
Â  Â  options: ["Berlin", "Madrid", "Paris", "Rome"],
Â  Â  answer: 2,
Â  Â  desc: "Paris is the capital of France, known as the City of Light."
},
//Q2
{
Â  Â  q: " Which planet is called the Red Planet?",
Â  Â  options: ["Earth", "Venus", "Mars", "Jupiter"],
Â  Â  answer: 2,
Â  Â  desc: "Mars is called the Red Planet because of its reddish appearance."
},

//Q3
{
Â  Â  q: " Select A",
Â  Â  options: ["a", "A", "c", "B"],
Â  Â  answer: 1,
Â  Â  desc: ""
},
//Q4
{
Â  Â  q: " Select z",
Â  Â  options: ["Z", "z", "x", "y"],
Â  Â  answer: 1,
Â  Â  desc: ""
},
//Q5
{
Â  Â  q: " Select S",
Â  Â  options: ["S", "s", "H", "T"],
Â  Â  answer: 0,
Â  Â  desc: ""
},
//Q6
{
Â  Â  q: " Select y",
Â  Â  options: ["Y", "g", "i", "y"],
Â  Â  answer: 3,
Â  Â  desc: ""
},

//Q7
{
Â  Â  q: " Select c",
Â  Â  options: ["a","b","c"],
Â  Â  answer: 2,
Â  Â  desc: ""
},

//Q8
{
Â  Â  q: " <p><math><msqrt><mn>544</mn></msqrt></math> is equal to?</p> ",
Â  Â  options: ["<p>16<math><msqrt><mn>17</mn></msqrt></math></p>",
Â  Â  "<p>4<math><msqrt><mn>34</mn></msqrt></math></p>",
Â  Â  "<p>8<math><msqrt><mn>34</mn></msqrt></math></p>",
Â  Â  "<p>6<math><msqrt><mn>24</mn></msqrt></math></p>"],
Â  Â  answer: 1,
Â  Â  desc: "<p style = font-size: 20px;><math><msqrt><mn>544</mn></msqrt></math> = <math><msqrt><mn>2 x 272</mn></msqrt> </math> = <math><msqrt><mn>2 x 2 x 136</mn></msqrt></math> = <math><msqrt><mn>2 x 2 x 2 x 68</mn></msqrt></math> = <math><msqrt><mn>2 x 2 x 2 x 2 x 34</mn></msqrt></math> = <math><msqrt><mn>16 x 34</mn></msqrt></math> = <p style = font-size:30px;>4<math><msqrt><mn>34</mn></msqrt></math></p></p>"
},

//Q9
{
Â  Â  q: myImg1,
Â  Â  options: ["103.6k", "106.8k", "103.9k", "106k"],
Â  Â  answer: 0,
Â  Â  desc: ""
},
//Q10
{
Â  Â  q: myImg,
Â  Â  options: ["500", "350", "400", "600"],
Â  Â  answer: 2,
Â  Â  desc: "four 600 ohm and one 1.2k ohm"
},

];

let currentQ = 0;
let attempts = 0;
let selectedOption = null;
let timer; // Variable to hold the countdown timer interval
let timeLeft = 60; // Initial time for the timer
let timeRemainingForAttempt = 60; // Stores remaining time for the next attempt

const questionDiv = document.getElementById("question");
const optionsDiv = document.getElementById("options");
const confirmBtn = document.getElementById("confirmBtn");
const nextBtn = document.getElementById("nextBtn");
const descriptionDiv = document.getElementById("description");
const Qstart = document.getElementById("strt");
const timerDiv = document.getElementById("timer"); // Get the new timer element

function startTimer() {
Â  Â  clearInterval(timer); // Clear any existing timer

Â  Â  if (attempts === 0) { // Only set initial time on the first attempt
Â  Â  Â  Â  if (currentQ === 8 || currentQ === 9) { // Questions are 0-indexed, so Q9 is index 8 and Q10 is index 9
Â  Â  Â  Â  Â  Â  timeRemainingForAttempt = 180;
Â  Â  Â  Â  } else {
Â  Â  Â  Â  Â  Â  timeRemainingForAttempt = 60;
Â  Â  Â  Â  }
Â  Â  }

Â  Â  timerDiv.textContent = timeRemainingForAttempt + "s";
Â  Â  timerDiv.classList.remove("low"); // Reset low timer class

Â  Â  timer = setInterval(() => {
Â  Â  Â  Â  timeRemainingForAttempt--;
Â  Â  Â  Â  timerDiv.textContent = timeRemainingForAttempt + "s";

Â  Â  Â  Â  if (timeRemainingForAttempt <= 10) {
Â  Â  Â  Â  Â  Â  timerDiv.classList.add("low");
Â  Â  Â  Â  }

Â  Â  Â  Â  if (timeRemainingForAttempt <= 0) {
Â  Â  Â  Â  Â  Â  clearInterval(timer);
Â  Â  Â  Â  Â  Â  confirmBtn.click(); // Automatically confirm when time runs out
Â  Â  Â  Â  }
Â  Â  }, 1000); // Update every second
}

function stopTimer() {
Â  Â  clearInterval(timer);
}

function loadQuestion() {
Â  Â  const qObj = questions[currentQ];
Â  Â  questionDiv.innerHTML = (currentQ + 1) + ". " + qObj.q;
Â  Â  optionsDiv.innerHTML = "";
Â  Â  descriptionDiv.style.display = "none";
Â  Â  confirmBtn.disabled = true;
Â  Â  nextBtn.style.display = "none";
Â  Â  attempts = 0;
Â  Â  selectedOption = null;
    timerDiv.style.display = "block"; // Make sure the timer is visible for the new question

Â  Â  startTimer(); // Start the timer for the new question

Â  Â  qObj.options.forEach((opt, i) => {
Â  Â  Â  Â  const btn = document.createElement("div");
Â  Â  Â  Â  btn.classList.add("option");
Â  Â  Â  Â  btn.innerHTML = opt;

Â  Â  Â  Â  btn.addEventListener("click", () => {
Â  Â  Â  Â  Â  Â  document.querySelectorAll(".option").forEach(o => o.classList.remove("selected"));
Â  Â  Â  Â  Â  Â  btn.classList.add("selected");
Â  Â  Â  Â  Â  Â  selectedOption = i;
Â  Â  Â  Â  Â  Â  confirmBtn.disabled = false;
Â  Â  Â  Â  Â  Â  stopTimer(); // Stop the timer when an option is selected
Â  Â  Â  Â  });

Â  Â  Â  Â  optionsDiv.appendChild(btn);
Â  Â  });
}

confirmBtn.addEventListener("click", () => {
Â  Â  if (selectedOption === null) return;
Â  Â  attempts++;

Â  Â  const qObj = questions[currentQ];
Â  Â  const allOptions = document.querySelectorAll(".option");

Â  Â  if (selectedOption === qObj.answer) {
Â  Â  Â  Â  allOptions[selectedOption].classList.add("correct");
Â  Â  Â  Â  showDescription(qObj.desc);
Â  Â  Â  Â  confirmBtn.disabled = true;
Â  Â  Â  Â  nextBtn.style.display = "inline-block";
Â  Â  Â  Â  stopTimer(); // Ensure the timer is stopped on a correct answer
Â  Â  } else {
Â  Â  Â  Â  allOptions[selectedOption].classList.add("wrong");
Â  Â  Â  Â  if (attempts === 2) {
Â  Â  Â  Â  Â  Â  allOptions[qObj.answer].classList.add("correct");
Â  Â  Â  Â  Â  Â  showDescription(qObj.desc);
Â  Â  Â  Â  Â  Â  confirmBtn.disabled = true;
Â  Â  Â  Â  Â  Â  nextBtn.style.display = "inline-block";
Â  Â  Â  Â  Â  Â  stopTimer(); // Stop the timer on the second attempt
Â  Â  Â  Â  } else {
Â  Â  Â  Â  Â  Â  startTimer(); // Continue the timer for the second attempt
Â  Â  Â  Â  }
Â  Â  }
});

nextBtn.addEventListener("click", () => {
Â  Â  currentQ++;
Â  Â  if (currentQ < questions.length) {
Â  Â  Â  Â  loadQuestion();
Â  Â  } else {
Â  Â  Â  Â  showFinalScore();
Â  Â  Â  Â  stopTimer(); // Stop the timer when the quiz is finished
Â  Â  }
});

function showDescription(text) {
Â  Â  descriptionDiv.innerHTML = text;
Â  Â  descriptionDiv.style.display = "block";
}

function showFinalScore() {
Â  Â  questionDiv.textContent = "ðŸŽ‰ Quiz Finished!";
Â  Â  optionsDiv.innerHTML = "";
Â  Â  confirmBtn.style.display = "none";
Â  Â  nextBtn.style.display = "none";
Â  Â  descriptionDiv.textContent = "Well done! You completed the quiz.";
Â  Â  descriptionDiv.style.display = "block";
Â  Â  timerDiv.style.display = "none"; // Hide the timer after the quiz is over
}

Qstart.addEventListener("click", () => {
Â  Â  loadQuestion();
Â  Â  Qstart.style.display = "none";
});
